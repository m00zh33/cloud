<?xml version="1.0" encoding="UTF-8"?>
<!-- Refers to https://springframework.guru/using-logback-spring-boot/ -->
<configuration>
    <springProperty name="activeProfile" source="spring.profiles.active" />
    <springProperty name="currentModule" source="application.module.name" />
    <springProperty name="kibanaCollector" source="alo7.infra.kibana.collector" />
    <springProperty name="hostName" source="application.host.name" />
    <springProperty name="springAppName" source="spring.application.name" />
    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/spring.log}"/>
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />
    <include resource="org/springframework/boot/logging/logback/file-appender.xml" />
    <appender name="SENTRY" class="io.sentry.logback.SentryAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>
                    return com.alo7.utils.HttpUtils.isRequestFromTestTools();
                </expression>
            </evaluator>
            <onMatch>DENY</onMatch>
        </filter>
    </appender>
    <appender name="ES_COLLECTOR"
              class="com.alo7.room.common.HttpAppender">
        <kibanaCollector>${kibanaCollector}</kibanaCollector>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <mdc/>
                <pattern>
                    <pattern>
                        {
                        "module": "${currentModule}",
                        "host":"${hostName}",
                        "timestamp": "%date{ISO8601}",
                        "logger": "%logger",
                        "level": "%level",
                        "thread": "%thread",
                        "message": "%message",
                        "env": "${activeProfile}"
                        }
                    </pattern>
                </pattern>
                <stackTrace>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>30</maxDepthPerThrowable>
                        <maxLength>2048</maxLength>
                        <shortenedClassNameLength>20</shortenedClassNameLength>
                        <exclude>^sun\.reflect\..*\.invoke</exclude>
                        <exclude>^net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
                        <rootCauseFirst>true</rootCauseFirst>
                    </throwableConverter>
                </stackTrace>
            </providers>
        </encoder>
    </appender>
    <appender name="ASYNC_ES_COLLECTOR" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
        <appender-ref ref="ES_COLLECTOR" />
    </appender>
    <appender name="CUSTOM_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %boldMagenta([${PID}]) %d{yyyy-MM-dd HH:mm:ss.SSS} - %boldCyan([${springAppName:-},%X{traceId},%X{spanId},%X{exportable}]) - %highlight(%-5level) %magenta([%thread]) %boldGreen(%logger) - %msg%n
            </pattern>
        </encoder>
    </appender>
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>100000</queueSize>
        <appender-ref ref="FILE" />
    </appender>
    <appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>100000</queueSize>
        <appender-ref ref="CUSTOM_CONSOLE" />
    </appender>
    <if condition='property("spring.profiles.active").contains("dev")'>
        <then>
            <root level="INFO">
                <appender-ref ref="ASYNC_CONSOLE" />
                <appender-ref ref="SENTRY" />
            </root>
        </then>
        <else>
            <if condition='property("spring.profiles.active").contains("test")'>
                <then>
                    <root level="INFO">
                        <appender-ref ref="ASYNC_FILE" />
                        <appender-ref ref="ASYNC_CONSOLE" />
                    </root>
                </then>
            <else>
                <root level="INFO">
                    <appender-ref ref="ASYNC_FILE" />
                    <appender-ref ref="ASYNC_CONSOLE" />
                    <appender-ref ref="SENTRY" />
                    <appender-ref ref="ASYNC_ES_COLLECTOR" />
                </root>
            </else>
            </if>
        </else>
    </if>
</configuration>